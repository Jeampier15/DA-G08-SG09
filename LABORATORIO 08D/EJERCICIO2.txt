"""Welcome to Reflex! This file outlines the steps to create a basic app."""
import reflex as rx

class State(rx.State):
    mostrar_solo_pendientes: bool = False

    def mostrar_pendientes(self):
        self.mostrar_solo_pendientes = not self.mostrar_solo_pendientes

tareas = [
    {"titulo": "MATEMATICA", "estado": "Pendiente"},
    {"titulo": "COMUNICACION", "estado": "Completado"},
    {"titulo": "BIOLOGIA", "estado": "Pendiente"},
    {"titulo": "ARTE", "estado": "Completado"},
    {"titulo": "MUSICA", "estado": "Pendiente"},
     {"titulo": "PERSONAL SOCIAL", "estado": "Pendiente"},
     {"titulo": "ARITMETICA", "estado": "Pendiente"},
     {"titulo": "RELIGION", "estado": "Pendiente"},

]

def tarjeta_tarea(tarea):
    return rx.table.row(
        rx.table.cell(tarea["titulo"]),  
        rx.table.cell(tarea["estado"]),
    )

def columna_kanban(nombre, tareas):
    return rx.box(
        rx.heading(nombre, size="md"),
        rx.table.root(
            rx.table.body(
                rx.foreach(
                    tareas,
                    tarjeta_tarea,
                )
            ),
        ),
    )

def obtener_tareas_filtradas():
    return rx.cond(
        State.mostrar_solo_pendientes,
        [tarea for tarea in tareas if tarea["estado"] == "Pendiente"],
        [tarea for tarea in tareas if tarea["estado"] == "Completado"]
    )

def contar_tareas_filtradas():
    return rx.cond(
        State.mostrar_solo_pendientes,
        len([tarea for tarea in tareas if tarea["estado"] == "Pendiente"]),
        len([tarea for tarea in tareas if tarea["estado"] == "Completado"])
    )

def index():
    return rx.box(
        rx.button(
            rx.cond(
                State.mostrar_solo_pendientes,
                "Mostrar Todas las Tareas",
                "Mostrar Solo Pendientes"
            ),
            on_click=State.mostrar_pendientes
        ),

        rx.text(
            rx.cond(
                State.mostrar_solo_pendientes,
                f"Tareas pendientes: {contar_tareas_filtradas()}",
                f"Tareas completadas: {contar_tareas_filtradas()}"
            )
        ),

        rx.box(
            rx.hstack(
                columna_kanban("Tareas", obtener_tareas_filtradas()),
            ),
        ),
        
    )

app = rx.App()
app.add_page(index)
